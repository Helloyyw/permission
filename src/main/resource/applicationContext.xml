<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mvc="http://www.springframework.org/schema/mvc"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
        http://www.springframework.org/schema/mvc
        http://www.springframework.org/schema/mvc/spring-mvc.xsd">

    <!--<context:property-placeholder location="classpath:jdbcConfig.properties"></context:property-placeholder>-->
    <!--读取属性文件-->
    <context:property-placeholder location="classpath:*.properties"/>
    <!-- 开启包扫描 -->
    <context:component-scan base-package="com.xmcc"></context:component-scan>
    <!-- 配置spring注解mvc的支持-->
    <mvc:annotation-driven></mvc:annotation-driven>
    <!-- 配置数据源 -->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <!-- 基本属性 url、user、password -->
        <property name="driverClassName" value="${jdbc.driver}" />
        <property name="url" value="${jdbc.url}" />
        <property name="username" value="${jdbc.username}" />
        <property name="password" value="${jdbc.password}" />
    </bean>

    <!--SqlSessionFactory-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="dataSource" ref="dataSource"></property>
        <!--配置mapper。xml的文件位置-->
        <property name="mapperLocations" value="classpath:mapper/*.xml"></property>
        <property name="typeAliasesPackage" value="com.xmcc.model"></property>
    </bean>

    <!-- DAO接口所在包名，Spring会自动查找其下的类，并将其定义为一个Spring Bean -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="com.xmcc.dao" />
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
    </bean>

    <!--配置Spring事务管理器-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>

    <!-- 开启spring对注解事务的支持 -->
    <tx:annotation-driven transaction-manager="transactionManager"></tx:annotation-driven>

    <!--<tx:advice id="txAdvice" transaction-manager="transactionManager">-->
    <!--<tx:attributes>-->
    <!--&lt;!&ndash; 配置所有方法 &ndash;&gt;-->
    <!--<tx:method name="*" read-only="false" propagation="REQUIRED"/>-->
    <!--&lt;!&ndash; 配置以find开头的方法 &ndash;&gt;-->
    <!--<tx:method name="find*" read-only="true" propagation="SUPPORTS"/>-->
    <!--</tx:attributes>-->
    <!--</tx:advice>-->

    <!--<aop:config>-->
    <!--<aop:pointcut id="txPoint" expression="execution(* com.xmcc.service.AccountServiceImpl.*(..))"></aop:pointcut>-->
    <!--<aop:advisor advice-ref="txAdvice" pointcut-ref="txPoint"></aop:advisor>-->
    <!--</aop:config>-->
    <!--引入redis-->
    <import resource="redis.xml"></import>
    <!--配置邮件接口-->
    <bean id="javaMailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
        <property name="host" value="${mail.smtp.host}"/>
        <property name="username" value="${mail.smtp.username}"/>
        <property name="password" value="${mail.smtp.password}"/>
        <property name="defaultEncoding" value="${mail.smtp.defaultEncoding}"/>
        <property name="javaMailProperties">
            <props>
                <prop key="mail.smtp.auth">${mail.smtp.auth}</prop>
                <prop key="mail.smtp.timeout">${mail.smtp.timeout}</prop>
            </props>
        </property>
    </bean>

</beans>